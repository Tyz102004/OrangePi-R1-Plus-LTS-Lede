name: N1 OpenWRT With Docker

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Select Amlogic SoC"
        required: false
        default: "s905d"
        type: choice
        options:
          - all
          - s905x3_s905d_s912
          - a311d
          - s922x
          - s922x-n2
          - s922x-reva
          - s905x3
          - s905x2
          - s905x2-km3
          - s912
          - s912-m8s
          - s905d
          - s905d-ki
          - s905x
          - s905w
          - s905
          - s905l3a
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.50"
        type: choice
        options:
          - 5.4.200_5.10.125
          - 5.10.125_5.15.50
          - 5.15.45_5.18.5
          - 5.4.200
          - 5.10.125
          - 5.15.50
          - 5.18.5
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      openwrt_size:
        description: "Set the rootfs size(Unit: MiB)."
        required: false
        default: "960"
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: 0 0 * * *

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CHECK_OUT:
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/n1.config
  DIY_P1_SH: script/n1.sh
  DIY_P2_SH: script/n1-2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/nekomi-cn/OrangePi-R1-Plus-LTS-Lede/master/depends-ubuntu-2004)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Clone source code
        working-directory: /workdir
        run: |
          df -hT $PWD
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Check out old code
        working-directory: /workdir
        if: env.CHECK_OUT != ''
        run: |
          cd openwrt
          git checkout $CHECK_OUT
          cd ..

      - name: Load custom feeds
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH

      - name: Update feeds
        working-directory: openwrt
        run: ./scripts/feeds update -a

      - name: Install feeds
        working-directory: openwrt
        run: ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "::set-output name=status::success"
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: Build OpenWrt firmware
        if: steps.compile.outputs.status == 'success' && !cancelled()
        uses: ophub/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz
          openwrt_soc: ${{ github.event.inputs.openwrt_soc }}
          openwrt_kernel: ${{ github.event.inputs.openwrt_kernel }}
          auto_kernel: ${{ github.event.inputs.auto_kernel }}
          openwrt_size: ${{ github.event.inputs.openwrt_size }}

      - name: Check space usage
        if: (!cancelled())
        run: df -hT

      - name: Organize files
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd ${{ env.PACKAGED_OUTPUTPATH }}
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "::set-output name=status::success"

      - name: Upload firmware directory
        uses: actions/upload-artifact@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          name: OpenWrt_s905d_n1_lede_${{ env.PACKAGED_OUTPUTDATE }}
          path: ${{ env.PACKAGED_OUTPUTPATH }}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        with:
          tag: OpenWrt_S905D_N1_Lede_${{ env.PACKAGED_OUTPUTDATE }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            This is OpenWrt firmware for Amlogic s905d N1 box
            * Firmware information
            Default IP: 192.168.43.1
            Default username: root
            Default password: password
            Default WIFI name: OpenWrt
            Default WIFI password: none
            Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt


      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 4

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 4
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
